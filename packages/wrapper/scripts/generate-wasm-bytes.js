#!/usr/bin/env node
import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const wasmPath = path.resolve(__dirname, '../../core/dist/notemine_bg.wasm');
const outputPath = path.resolve(__dirname, '../src/wasm/bytes.ts');

async function generateWasmBytes() {
  try {
    // Read the WASM file
    const wasmBuffer = await fs.readFile(wasmPath);

    // Create the output directory if it doesn't exist
    await fs.mkdir(path.dirname(outputPath), { recursive: true });

    // Convert to array of bytes
    const bytes = Array.from(wasmBuffer);

    // Generate TypeScript file
    const content = `// Auto-generated by generate-wasm-bytes.js
// This file contains the embedded WASM bytes for @notemine/core
// DO NOT EDIT MANUALLY

export default new Uint8Array([${bytes.join(',')}]);
`;

    await fs.writeFile(outputPath, content);
    console.log(`âœ“ Generated WASM bytes module: ${outputPath}`);
    console.log(`  Size: ${(wasmBuffer.length / 1024).toFixed(2)} KB`);
  } catch (error) {
    console.error('Failed to generate WASM bytes:', error.message);
    process.exit(1);
  }
}

generateWasmBytes();
